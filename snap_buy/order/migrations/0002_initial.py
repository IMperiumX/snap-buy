# Generated by Django 5.0.8 on 2024-08-10 13:01

import django.contrib.postgres.indexes
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("app", "0002_initial"),
        ("channel", "0001_initial"),
        ("discount", "0002_initial"),
        ("giftcard", "0002_initial"),
        ("order", "0001_initial"),
        ("payment", "0001_initial"),
        ("product", "0001_initial"),
        ("shipping", "0001_initial"),
        ("tax", "0001_initial"),
        ("users", "0001_initial"),
        ("warehouse", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="fulfillmentline",
            name="stock",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="fulfillment_lines",
                to="warehouse.stock",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="billing_address",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="users.address",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="channel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="orders",
                to="channel.channel",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="collection_point",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="orders",
                to="warehouse.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="gift_cards",
            field=models.ManyToManyField(
                blank=True, related_name="orders", to="giftcard.giftcard"
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="original",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="order.order",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="shipping_address",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="users.address",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="shipping_method",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="orders",
                to="shipping.shippingmethod",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="shipping_tax_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="tax.taxclass",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="orders",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="voucher",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="discount.voucher",
            ),
        ),
        migrations.AddField(
            model_name="fulfillment",
            name="order",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fulfillments",
                to="order.order",
            ),
        ),
        migrations.AddField(
            model_name="ordergrantedrefund",
            name="app",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="app.app",
            ),
        ),
        migrations.AddField(
            model_name="ordergrantedrefund",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="granted_refunds",
                to="order.order",
            ),
        ),
        migrations.AddField(
            model_name="ordergrantedrefund",
            name="transaction_item",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="granted_refund",
                to="payment.transactionitem",
            ),
        ),
        migrations.AddField(
            model_name="ordergrantedrefund",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderline",
            name="order",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lines",
                to="order.order",
            ),
        ),
        migrations.AddField(
            model_name="orderline",
            name="tax_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="tax.taxclass",
            ),
        ),
        migrations.AddField(
            model_name="orderline",
            name="variant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="order_lines",
                to="product.productvariant",
            ),
        ),
        migrations.AddField(
            model_name="fulfillmentline",
            name="order_line",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fulfillment_lines",
                to="order.orderline",
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["private_metadata"], name="order_p_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["metadata"], name="order_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_document"],
                name="order_search_gin",
                opclasses=["gin_trgm_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="order_tsearch"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["user_email"],
                name="order_email_search_gin",
                opclasses=["gin_trgm_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(fields=["created_at"], name="idx_order_created_at"),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["voucher_code"], name="order_voucher_code_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["user_email", "user_id"], name="order_user_email_user_id_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=django.contrib.postgres.indexes.BTreeIndex(
                fields=["checkout_token"], name="checkout_token_btree_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="fulfillment",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["private_metadata"], name="fulfillment_p_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="fulfillment",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["metadata"], name="fulfillment_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderline",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["private_metadata"], name="orderline_p_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderline",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["metadata"], name="orderline_meta_idx"
            ),
        ),
    ]
