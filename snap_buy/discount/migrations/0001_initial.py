# Generated by Django 5.0.8 on 2024-08-16 11:21

import django.contrib.postgres.indexes
import django.utils.timezone
import django_countries.fields
import snap_buy.core.db.fields
import snap_buy.core.utils.json_serializer
import typing
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("channel", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PromotionRule_Variants",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Voucher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "private_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("entire_order", "Entire order"),
                            ("shipping", "Shipping"),
                            (
                                "specific_product",
                                "Specific products, collections and categories",
                            ),
                        ],
                        default="entire_order",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                ("usage_limit", models.PositiveIntegerField(blank=True, null=True)),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("apply_once_per_order", models.BooleanField(default=False)),
                ("apply_once_per_customer", models.BooleanField(default=False)),
                ("single_use", models.BooleanField(default=False)),
                ("only_for_staff", models.BooleanField(default=False)),
                (
                    "discount_value_type",
                    models.CharField(
                        choices=[("fixed", "fixed"), ("percentage", "%")],
                        default="fixed",
                        max_length=10,
                    ),
                ),
                (
                    "countries",
                    django_countries.fields.CountryField(
                        blank=True, max_length=746, multiple=True
                    ),
                ),
                (
                    "min_checkout_items_quantity",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
            ],
            options={
                "ordering": ("name", "pk"),
            },
        ),
        migrations.CreateModel(
            name="VoucherCode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("code", models.CharField(db_index=True, max_length=255, unique=True)),
                ("used", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ("-created_at", "code"),
            },
        ),
        migrations.CreateModel(
            name="VoucherCustomer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("customer_email", models.EmailField(max_length=254)),
            ],
            options={
                "ordering": ("voucher_code", "customer_email", "pk"),
            },
        ),
        migrations.CreateModel(
            name="Promotion",
            fields=[
                (
                    "private_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[("catalogue", "Catalogue"), ("order", "Order")],
                        default="catalogue",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    snap_buy.core.db.fields.SanitizedJSONField(
                        blank=True, null=True, sanitizer=typing._overload_dummy
                    ),
                ),
                (
                    "old_sale_id",
                    models.IntegerField(blank=True, null=True, unique=True),
                ),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "last_notification_scheduled_at",
                    models.DateTimeField(blank=True, null=True),
                ),
            ],
            options={
                "ordering": ("name", "pk"),
                "permissions": (
                    ("manage_discounts", "Manage promotions and vouchers."),
                ),
                "indexes": [
                    django.contrib.postgres.indexes.BTreeIndex(
                        fields=["start_date"], name="start_date_idx"
                    ),
                    django.contrib.postgres.indexes.BTreeIndex(
                        fields=["end_date"], name="end_date_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PromotionRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                (
                    "description",
                    snap_buy.core.db.fields.SanitizedJSONField(
                        blank=True, sanitizer=typing._overload_dummy
                    ),
                ),
                (
                    "catalogue_predicate",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                    ),
                ),
                (
                    "order_predicate",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                    ),
                ),
                (
                    "reward_value_type",
                    models.CharField(
                        blank=True,
                        choices=[("fixed", "fixed"), ("percentage", "%")],
                        max_length=255,
                    ),
                ),
                (
                    "reward_value",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=12, null=True
                    ),
                ),
                (
                    "reward_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("subtotal_discount", "subtotal_discount"),
                            ("gift", "gift"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "old_channel_listing_id",
                    models.IntegerField(blank=True, null=True, unique=True),
                ),
                ("variants_dirty", models.BooleanField(default=False)),
                ("channels", models.ManyToManyField(to="channel.channel")),
            ],
            options={
                "ordering": ("name", "pk"),
            },
        ),
    ]
