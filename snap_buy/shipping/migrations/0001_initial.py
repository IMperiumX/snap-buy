# Generated by Django 5.0.8 on 2024-08-10 13:01

import django.contrib.postgres.indexes
import django.db.models.deletion
import django_countries.fields
import django_measurement.models
import measurement.measures.mass
import snap_buy.core.db.fields
import snap_buy.core.utils.json_serializer
import snap_buy.core.weight
import typing
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("channel", "0001_initial"),
        ("product", "0001_initial"),
        ("tax", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ShippingZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "private_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "countries",
                    django_countries.fields.CountryField(
                        blank=True, default=[], max_length=746, multiple=True
                    ),
                ),
                ("default", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True)),
                (
                    "channels",
                    models.ManyToManyField(
                        related_name="shipping_zones", to="channel.channel"
                    ),
                ),
            ],
            options={
                "permissions": (("manage_shipping", "Manage shipping."),),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShippingMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "private_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=snap_buy.core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("price", "Price based shipping"),
                            ("weight", "Weight based shipping"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "minimum_order_weight",
                    django_measurement.models.MeasurementField(
                        blank=True,
                        default=snap_buy.core.weight.zero_weight,
                        measurement=measurement.measures.mass.Mass,
                        null=True,
                    ),
                ),
                (
                    "maximum_order_weight",
                    django_measurement.models.MeasurementField(
                        blank=True,
                        measurement=measurement.measures.mass.Mass,
                        null=True,
                    ),
                ),
                (
                    "maximum_delivery_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "minimum_delivery_days",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "description",
                    snap_buy.core.db.fields.SanitizedJSONField(
                        blank=True, null=True, sanitizer=typing._overload_dummy
                    ),
                ),
                (
                    "excluded_products",
                    models.ManyToManyField(blank=True, to="product.product"),
                ),
                (
                    "tax_class",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shipping_methods",
                        to="tax.taxclass",
                    ),
                ),
                (
                    "shipping_zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shipping_methods",
                        to="shipping.shippingzone",
                    ),
                ),
            ],
            options={
                "ordering": ("pk",),
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="shippingzone",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["private_metadata"], name="shippingzone_p_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shippingzone",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["metadata"], name="shippingzone_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shippingzone",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["countries"],
                name="s_z_countries_idx",
                opclasses=["gin_trgm_ops"],
            ),
        ),
        migrations.AddIndex(
            model_name="shippingmethod",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["private_metadata"], name="shippingmethod_p_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shippingmethod",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["metadata"], name="shippingmethod_meta_idx"
            ),
        ),
    ]
